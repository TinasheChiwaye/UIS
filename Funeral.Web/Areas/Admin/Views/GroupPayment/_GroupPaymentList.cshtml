@model Funeral.Model.Search.BaseSearch
@Styles.Render("~/Content/datatablecss")
<script src="~/Scripts/plugins/dateformat/DateFormat.js"></script>
@using (Html.BeginForm())
{
	<div class="dataTables_wrapper" id="tblSocietySetupSearch_wrapper">
		<div class="col-lg-12">
			<div class="ibox ">
				<div class="ibox-title">
					<h5>Group Payment List</h5>
				</div>
				<div class="ibox-content">
					<div class="row">
						<div class="col-lg-3" id="dvAdministrator">
							<div class="form-group">
								<label>Show entries</label>
								@Html.DropDownListFor(m => m.PageSize, new SelectList(ViewBag.EntriesCount, "Value", "Key"), new { @class = "form-control" })
							</div>
						</div>
						<div class="col-sm-5 col-sm-offset-4">
							<div class="form-group">
								@Html.Label("Search Society:", new { @class = "control-label" })
								<div class="input-group">
									@Html.TextBoxFor(m => m.SarchText, null, new { @class = "form-control", @maxlength = "50", placeholder = "Search by keyword" })
									<span class="input-group-btn">
										<input type="button" id="btnSearch" value="Search" class="btn btn-w-m btn-primary" />
									</span>
								</div>
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-sm-9">
							<asp:Label ID="lblRecords" runat="server" Text=""></asp:Label>
						</div>
					</div>
					<div class="row">
						<div class="col-lg-12 ">
							<div class="table-responsive">
								@Html.EditorFor(model => model.PageNum, new { htmlAttributes = new { @class = "hidden", id = "PageNum1" } })
								@Html.EditorFor(model => model.PageSize, new { htmlAttributes = new { @class = "hidden", id = "PageSize1" } })
								@Html.Hidden("ItemId")
								<table id="societySetupDataTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
									<thead>
										<tr>
											<th class="hidden"></th>
											<th>Group Name</th>
                                            <th>Amount</th>
                                            <th>Received By</th>
											<th>Payment Type</th>
											<th>Modified date</th>											
											<th>Action</th>
										</tr>
									</thead>
									<tbody></tbody>
								</table>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script type="text/javascript">
        $(document).ready(function () {
            ConfigureDatatable();
            InitDataTable();
            eventConfigs.pageChange.eventName = 'btnPageChanged';
            eventConfigs.pageChange.domElement = jQuery('#PageSize')[0];
            eventConfigs.searchClick.eventName = 'btnSearchClicked';
            eventConfigs.searchClick.domElement = jQuery('#btnSearch')[0];

            $('#PageSize').change(function () {
                InitModel();
                tableConfigs.table.DataTable().page.len(model1.PageSize).draw();
                eventConfigs.pageChange.dispatchEvent();
            });

            $("#btnSearch").click(function () {
                InitModel();
                tableConfigs.table.fnDraw();
                eventConfigs.searchClick.dispatchEvent();
            });
        });

        function ConfigureDatatable(){

            var sortOrder = @Html.Raw(Json.Encode(@Model.SortOrder));
            var sortBy =@Html.Raw(Json.Encode(@Model.SortBy));
            var totalRecord =@Html.Raw(Json.Encode(@Model.TotalRecord));
            var pageNum =@Html.Raw(Json.Encode(@Model.PageNum));
            var pageSize =@Html.Raw(Json.Encode(@Model.PageSize));
            var searchText =@Html.Raw(Json.Encode(@Model.SarchText));

			DOMIDs.Datatable = "societySetupDataTable";
            tableConfigs.SearchUrls = '@Url.Action("SearchData", "GroupPayment", new { }, Request.Url.Scheme)';
			setsearchmodel('200', sortOrder, sortBy, totalRecord, pageNum, pageSize, searchText);

            columnsArray =
				[{ "data": "GroupInvoiceID", "name": "GroupInvoiceID", "autoWidth": true, "visible": false },
                { "data": "SocietyName", "name": "Society Name", "autoWidth": true },

                { "data": "AmountPaid", "name": "AmountPaid", "autoWidth": true },
                { "data": "RecievedBy", "name": "RecievedBy", "autoWidth": true },
                { "data": "PaymentMethod", "name": "PaymentMethod", "autoWidth": true },
				{
					"data": "LastModified", "name": "Modified Date", "autoWidth": true,
					"render": function (data) {
						var date = new Date(parseInt(data.replace('/Date(', '')));
						return dateFormat(date, dateFormat.masks.isoDate, true);
					}
				},
				{
					"render": function (data, type, full, meta) {

                    var hasEditRights = '@ViewBag.HasEditRight' == "True" ? true : false;
					var hasDeleteRights = '@ViewBag.HasDeleteRight' == "True" ? true : false;

					if (hasEditRights || hasDeleteRights) {

                        tableConfigs.table.DataTable().columns([4]).visible(true)
                        var dom = "<div class='row'>";

                        if (hasEditRights) {
							var editMemberUrl = '<div class="col-sm-4 text-center"><a  onclick="EditGroupPayment(\'' + full.GroupInvoiceID + '\')"><i class="fa fa-edit"></i></a></div>';
                            dom = dom + editMemberUrl;
                        }
                        if (hasDeleteRights) {
                            var deleteMemberUrl = '<div class="btn btn-w-m btn-primary paymentreversal text-center" onclick="reversegrouppayment()"; >Reverse Payment</div>';
                            dom = dom + deleteMemberUrl;
						}
                        dom = dom + "</div>";
                        return dom;
                    }
					else {
						tableConfigs.table.DataTable().columns([4]).visible(false);
                        return "";
                    }
                }
            }];
        }

        function InitModel() {
            model1.PageNum = 1;
            model1.PageSize = jQuery('#PageSize').val();
            model1.SarchText = jQuery("#SarchText").val();
            jQuery("#PageNum1").val(model1.PageNum);
        }

        function EditGroupPayment(societyID) {
			jQuery("#ItemId").val(societyID);
            var editUrl = '@Url.Action("Edit", "GroupPayment", new { ID = "GroupInvoiceID" },Request.Url.Scheme)';
			editUrl = editUrl.replace("GroupInvoiceID", societyID);

            jQuery.ajax({
                url: editUrl,
                type: "Get",
                contentType: "application/html; charset=utf-8",
                dataType: 'html'
            })
            .success(function (result) {
				jQuery("#" + DOMIDs.AddEdit).html(result);
				window.scrollTo(0, 100);
            })
            .error(function (xhr, status) {
                alert(status);
            });
        }

        function reversegrouppayment() {

            var confirmStatus =confirm("You are about to reverse a group payment, do you want to Continue?");
            if (confirmStatus == true) {
                var ivnoiceId = $(this).attr("role");
                jQuery.ajax({
                    url: '@Url.Action("GroupPaymentReversal", "GroupPayment", new { },Request.Url.Scheme)?id=' + groupinvoiceId,
                    type: "Get",
                    contentType: "application/html; charset=utf-8",
                    dataType: 'html'
                })
                    .success(function (Message) {
                        alert(Message);
                        location.reload();
                    })
                    .error(function (xhr, status) {
                        alert(status);
                    });
            }
            else {
                return false;
            }
        }
	</script>
}

