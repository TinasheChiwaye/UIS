@model Funeral.Model.ChangeStatusReason

<div class="modal fade" id="dvChangeStatusModel" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;  </button>
                <h4 class="modal-title">Claim Status</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    @{
                        if (ViewBag.Statuses.Count > 0)
                        {
                            using (Html.BeginForm("ChangeClaimStatus", "Claims", FormMethod.Post))
                            {
                                @Html.HiddenFor(x => x.ClaimID)
                                @Html.HiddenFor(x => x.fkiMemberId)
                                @Html.HiddenFor(x => x.CurrentStatus)
                                @Html.HiddenFor(x => x.ParlourID)
                                @Html.HiddenFor(x => x.ClaimCreatedDate)
                                @Html.HiddenFor(x => x.ClaimNotes)
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <div class="col-sm-6">
                                            <label>Status* </label>
                                            @Html.DropDownListFor(x => x.NewStatus, new SelectList(ViewBag.Statuses, "Status", "Status"), new { @class = "form-control", @required = true })
                                            @Html.ValidationMessageFor(x => x.NewStatus, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col-sm-6">
                                            <label>Reason* </label>
                                            @Html.DropDownListFor(x => x.ChangeReason, new SelectList(ViewBag.ClaimReasonList, "ClaimReason", "ClaimReason"), "Select Reason", new { @class = "form-control", @required = true })
                                            @Html.ValidationMessageFor(x => x.ChangeReason, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-sm-12">
                                            <label>Comment </label>
                                            @Html.TextAreaFor(x => x.Comment, 2, 10, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.Comment, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-sm-12">
                                            <br />
                                            <input type="submit" value="Submit" class="btn btn-sm btn-primary pull-right" />
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div><h3 class="text-danger text-center">Sorry you dont have rights</h3></div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
