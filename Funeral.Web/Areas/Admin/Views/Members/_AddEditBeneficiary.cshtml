@model Funeral.Web.Areas.Admin.Models.ViewModel.ManageMembersVM
@Html.Hidden("txtpkiBeneficiaryID", "0")
@Html.Hidden("SaveBeneficiaryUrl", Url.Action("SaveBeneficiary"))
@Html.Hidden("DeleteBeneficiary", Url.Action("DeleteBeneficiary"))
<div class="row">
    <div class="col-lg-12">
        <div class="form-group">
            <div class="input-group">
                <div id="ValidationSummary_Beneficiary" style="color: red;" hidden><ul></ul></div>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="form-group">
            <label>Full Name<em>*</em></label>
            @Html.TextBox("FullName_Beneficiary", "", new { @type = "text", @maxlength = "20", @id = "txtFullName_Beneficiary", @class = "form-control", @placeholder = "Full name" })
        </div>
        <div class="form-group">
            <label>Surname<em>*</em></label>
            @Html.TextBox("Surname_Beneficiary", "", new { @type = "text", @maxlength = "20", @id = "txtSurname_Beneficiary", @class = "form-control", @placeholder = "Surname" })
        </div>
        <div class="form-group">
            <label>ID Number<em>*</em></label>
            @Html.TextBox("IDNumber_Beneficiary", "", new { @maxlength = "13", @pattern = "/d*", @onkeyup = "GetIdNumberDetails_beneficiery(this);", @id = "txtIDNumber_Beneficiary", @class = "form-control", @placeholder = "ID Number" })
        </div>
        <div class="form-group">
            <label>Date Of Birth<em>*</em></label>
            @Html.TextBox("DateOfBirth_Beneficiary", "", new { @type = "text", @id = "txtDateOfBirth_Beneficiary", @class = "form-control", @placeholder = "Date Of Birth" })
        </div>
        <button class="btn btn-sm btn-primary" id="btnSaveBeneficiary" onclick="AddEditBeneficiary()">Save Beneficiary</button>
        <button class="btn btn-sm btn-primary" id="btnCancelBeneficiary" onclick="NullInputControls()">Cancel</button>
        <br />
        <br />
    </div>
    <div class="col-lg-6">
        <div class="form-group">
            <label>Cellphone Number<em>*</em></label>
            @Html.TextBox("Cellphone_Beneficiary", "", new { @type = "text", @id = "txtCellPhoneNumber_Beneficiary", @class = "form-control", @placeholder = "CellPhone Number" })
        </div>
        <div class="form-group">
            <label>Select Relationship Type</label>
            @Html.DropDownList("RelationshipType_Beneficiary", new List<SelectListItem>
                {
                    new SelectListItem{ Text="Parents", Value = "Parents" },
                    new SelectListItem{ Text="Child", Value = "Child" },
                    new SelectListItem{ Text="Sister", Value = "Sister" },
                    new SelectListItem{ Text="Father", Value = "Father" },
                    new SelectListItem{ Text="Brother", Value = "Brother" },
                    new SelectListItem{ Text="Mother", Value = "Mother" },
                    new SelectListItem{ Text="Spouse", Value = "Spouse" },
                },new { @id = "ddlRelationshipType_Beneficiary", @style = "width:100%", @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Percentages<em>*</em></label>
            @Html.TextBox("Percentages_Beneficiary", "", new { @type = "number", @onInput = "return check(event,value)", @min = "0", @max = "100", @step = "0.01", @id = "txtPercentages_Beneficiary", @class = "form-control", @placeholder = "Percentages" })
        </div>
        @*<div class="form-group">
            <label>Date Of Birth<em>*</em></label>
            @Html.TextBox("DateOfBirth_Beneficiary", "", new { @type = "text", @id = "txtDateOfBirth_Beneficiary", @class = "form-control", @placeholder = "Date Of Birth" })
        </div>*@
    </div>
    @*<div class="form-group">
        <button class="btn btn-sm btn-primary" id="btnSaveBeneficiary" onclick="AddEditBeneficiary()">Save Beneficiary</button>
        <button class="btn btn-sm btn-primary" id="btnCancelBeneficiary" onclick="NullInputControls()">Cancel</button>
        <br />
        <br />
    </div>*@
</div>
<div class="row">
    <div class="col-lg-12 ">
        <div class="table-responsive">
            @Html.EditorFor(model => model.ProductSearch.PageNum, new { htmlAttributes = new { @class = "hidden", id = "PageNum1" } })
            @Html.EditorFor(model => model.ProductSearch.PageSize, new { htmlAttributes = new { @class = "hidden", id = "PageSize1" } })
            <table id="BeneficiaryDataTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>pkiBeneficiaryID</th>
                        <th>pkiMemberID</th>
                        <th>Full Name</th>
                        <th>Surname</th>
                        <th>Relation</th>
                        <th>Percentage</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>





<script type="text/javascript">
    check = function (e,value){
    if (!e.target.validity.valid) {
        e.target.value = value.substring(0,value.length - 1);
        return false;
    }
    var idx = value.indexOf('.');
    if (idx >= 0 && value.length - idx > 3) {
        e.target.value = value.substring(0,value.length - 1);
        return false;
    }
    return true;
    }
      $('#txtDateOfBirth_Beneficiary').datepicker({format: 'dd MM yyyy', autoclose: true,setDate: new Date()});
    function AddEditBeneficiary() {
        var DependencyType = $("#ddlDependentDependencyType_Beneficiary").val();
        var FullName = $("#txtFullName_Beneficiary").val();
        var Surname = $("#txtSurname_Beneficiary").val();
        var DateOfBirth = $("#txtDateOfBirth_Beneficiary").val();
        var RelationshipType = $("#ddlRelationshipType_Beneficiary").val();
        var IDNumber = $("#txtIDNumber_Beneficiary").val();
        var Code = $("#txtCode_Beneficiary").val();
        var CellPhoneNumber = $("#txtCellPhoneNumber_Beneficiary").val();
        var pkiBeneficiaryID_Beneficiary = $("#txtpkiBeneficiaryID").val();
        var SaveBeneficiaryUrl = $("#SaveBeneficiaryUrl").val();
        var ActualDate = new Date().format("dd-mm-yyyy");
        if (DateOfBirth != "") {
            ActualDate = new Date(DateOfBirth).format("dd-mm-yyyy");
        }
        $("#ValidationSummary_Beneficiary").hide();
        var objProductModel = {
            pkiBeneficiaryID: pkiBeneficiaryID_Beneficiary,
            RelationshipType_Beneficiary: RelationshipType,
            FullName_Beneficiary: FullName,
            Surname_Beneficiary: Surname,
            DateOfBirth_string: ActualDate,
            DateOfBirth_Beneficiary: ActualDate,
            IDNumber_Beneficiary: IDNumber,
            Code_Beneficiary: Code,
            Cellphone_Beneficiary: CellPhoneNumber,
            Percentages: $("#txtPercentages_Beneficiary").val(),
            DependencyType_Beneficiary: DependencyType,
            pkiMemberID: $("#pkiMemberID").val(),
        };
        $.ajax({
            url: SaveBeneficiaryUrl,
            data: objProductModel,
            type: "post",
            cache: false,
            success: function (result) {
                if (result == "Inserted"||result == "Updated") {
                    BeneficiaryDataTable.fnDraw();
                    NullInputControls();
                    $("#lblMessage").html('');
                    $("#lblMessage").append('<div class="alert alert-success">Beneficiary ' + result + ' Successfully</div>');
                    $("#txtPremium").val('');
                }
                else if (result == "PercentageLimit"){
                    $("#lblMessage").html('');
                    $("#lblMessage").append('<div class="alert alert-danger">Total percentage limit of 100%  bas been completed</div>');
                }
                else {
                    $("#ValidationSummary_Beneficiary").show();
                    $("#ValidationSummary_Beneficiary").empty().append(result);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(thrownError);
            }
        });
    }
    function NullInputControls() {
        $("#ddlDependentDependencyType_Beneficiary").val(1);
        $("#ddlRelationshipType_Beneficiary").val("Parents");
        $("#txtFullName_Beneficiary").val("");
        $("#txtSurname_Beneficiary").val("");
        $("#txtDateOfBirth_Beneficiary").val("");
        $("#txtIDNumber_Beneficiary").val("");
        $("#txtCode_Beneficiary").val("");
        $("#pkiBeneficiaryID").val("");
    }
    function bindBeneficiaryDatatable()
    {
        var sortOrder = @Html.Raw(Json.Encode(@Model.ProductSearch.SortOrder));
        var sortBy =@Html.Raw(Json.Encode(@Model.ProductSearch.SortBy));
        var totalRecord =@Html.Raw(Json.Encode(@Model.ProductSearch.TotalRecord));
        var pageNum =@Html.Raw(Json.Encode(@Model.ProductSearch.PageNum));
        var pageSize =@Html.Raw(Json.Encode(@Model.ProductSearch.PageSize));
        var searchText =@Html.Raw(Json.Encode(@Model.ProductSearch.SarchText));
        var model1 = {SortOrder: sortOrder,SortBy: sortBy,TotalRecord: totalRecord,PageNum: pageNum,PageSize: pageSize,SarchText: searchText};
        $(document).ready(function () {
            jQuery.noConflict();
            BeneficiaryDataTable = $($('#BeneficiaryDataTable')[0]).on('page.dt', function () {
                var table = $('#BeneficiaryDataTable').DataTable();
                var page = table.page.info();
                model1.PageNum = page.page + 1;
            }).dataTable({
                'bProcessing': true,
                'bServerSide': true,
                "bLengthChange": false,
                'bFilter': false,
                'ordering': false,
                'ajax': {
                    "url": '@Url.Action("SearchBeneficiaryData", "Members", null, Request.Url.Scheme)',
                    "type": "POST",
                    "contentType": "application/json",
                    "data": function (d) {
                        d['order'].forEach(function (item, index) {
                            if (model1.SortBy != d['columns'][item.column]['data']) {
                                model1.PageNum = 1;
                                model1.SortOrder = "asc";
                            }
                            if (model1.SortBy == d['columns'][item.column]['data'] && model1.SortOrder != d['order'][index]['dir']) {
                                model1.PageNum = 1;
                                model1.SortOrder = d['order'][index]['dir'];
                            }
                            model1.SortBy = d['columns'][item.column]['data'];
                            model1.SortOrder = d['order'][index]['dir'];
                        });
                        return JSON.stringify(model1);
                    },
                    dataFilter: function (data) {
                        var json = jQuery.parseJSON(data);
                        json.recordsTotal = json.TotalCount;
                        json.recordsFiltered = json.TotalCount;
                        json.data = json.Result;
                        return JSON.stringify(json);
                    }
                },
                "columns": [
                    { "data": "pkiBeneficiaryID", "name": "pkiBeneficiaryID", "autoWidth": true, "visible": false },
                    { "data": "pkiMemberID", "name": "pkiMemberID", "autoWidth": true, "visible": false },
                    { "data": "FullName_Beneficiary", "name": "FullName_Beneficiary", "autoWidth": true },
                    { "data": "Surname_Beneficiary", "name": "Surname_Beneficiary", "autoWidth": true },
                    { "data": "RelationshipType_Beneficiary", "name": "RelationshipType_Beneficiary", "autoWidth": true },
                    { "data": "Percentages", "name": "Percentages", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            var hasEditRights = '@ViewBag.HasEditRight' == "True" ? true : false;
                            var hasDeleteRights = '@ViewBag.HasDeleteRight' == "True" ? true : false;
                            var dom = "<div class='row'>";
                            var data1 = JSON.stringify(full);
                            data1 = data1.replace(/"/g, "\'")
                            if (hasEditRights) {
                                var editProductUrl = '<div class="col-sm-4 text-center"><a  onclick="EditBeneficiary(' + data1 + ')"><i class="fa fa-edit"></i></a></div>';
                                dom = dom + editProductUrl;
                            }
                            if (hasDeleteRights) {
                                var deleteProductUrl = '<div class="col-sm-4 text-center"> <a onclick="DeleteBeneficiary(' + data1 + ')"; ><i class="fa fa-trash-o"></i></a></div>';
                                dom = dom + deleteProductUrl;
                            }
                            dom = dom + "</div>";
                            return dom;
                        }
                    }
                ]
            });
        });
    }
    function EditBeneficiary(Beneficiary) {
        debugger;
        $("#txtpkiBeneficiaryID").val(Beneficiary.pkiBeneficiaryID);
        $("#ddlDependentDependencyType_Beneficiary").val(Beneficiary.DependencyType_Beneficiary);
        $("#txtFullName_Beneficiary").val(Beneficiary.FullName_Beneficiary);
        $("#txtSurname_Beneficiary").val(Beneficiary.Surname_Beneficiary);
        $('#txtDateOfBirth_Beneficiary').datepicker({ format: 'dd MM yyyy',autoclose: true }).datepicker("setDate", dateFormat(new Date(ConvertDate(Beneficiary.DateOfBirth_Beneficiary)), "dd/mm/yyyy", false));
        $("#ddlRelationshipType_Beneficiary").val(Beneficiary.RelationshipType_Beneficiary);
        $("#txtPercentages_Beneficiary").val(Beneficiary.Percentages);
        $("#txtIDNumber_Beneficiary").val(Beneficiary.IDNumber_Beneficiary);
        $("#txtCode_Beneficiary").val(Beneficiary.Code_Beneficiary);
        $("#txtCellPhoneNumber_Beneficiary").val(Beneficiary.Cellphone_Beneficiary);
    }
     function DeleteBeneficiary(product) {
         var DeleteAddonProductURl = $("#DeleteBeneficiary").val();
           var deleteConfirm = confirm('Are you sure you want to delete it?');
         if (deleteConfirm) {
             jQuery.ajax({
                 url: DeleteAddonProductURl + "?pkiBeneficiaryID=" + product.pkiBeneficiaryID,
                 type: "Get",
                 contentType: "application/html; charset=utf-8",
                 dataType: 'html'
             }).success(function (result) { BeneficiaryDataTable.fnDraw(); }).error(function (xhr, status) { alert(status); });
         }
    }
    function GetIdNumberDetails_beneficiery(IdNumberControls) {
        var idNumber = IdNumberControls.value;
        var textLength = idNumber.length;
        if (textLength == 13) {
            ValidateIdNumber(idNumber);
        }
    }
    function ValidateIdNumber(idNumber) {
        var correct = true;
        if (idNumber.length != 13 || !isNumber(idNumber)) {
            correct = false;
        }
        var tempDate = new Date(idNumber.substring(0, 2), idNumber.substring(2, 4) - 1, idNumber.substring(4, 6));
        var id_date = tempDate.getDate();
        var id_month = tempDate.getMonth();
        var dMonth = id_month + 1;
        var dMonthName = tempDate.getMonthName();
        var id_year = idNumber.substring(0, 2);
        var cutoff = (new Date()).getFullYear() - 2000;
        var fullDate = id_date + " " + dMonthName + " " + (id_year > cutoff ? '19' : '20') + id_year;
        if (!((tempDate.getYear() == idNumber.substring(0, 2)) && (id_month == idNumber.substring(2, 4) - 1) && (id_date == idNumber.substring(4, 6)))) {
            correct = false;
        }
        var citzenship = parseInt(idNumber.substring(10, 11)) == 0 ? "Yes" : "No";
        var tempTotal = 0;
        var checkSum = 0;
        var multiplier = 1;
        for (var i = 0; i < 13; ++i) {
            tempTotal = parseInt(idNumber.charAt(i)) * multiplier;
            if (tempTotal > 9) {
                tempTotal = parseInt(tempTotal.toString().charAt(0)) + parseInt(tempTotal.toString().charAt(1));
            }
            checkSum = checkSum + tempTotal;
            multiplier = (multiplier % 2 == 0) ? 1 : 2;
        }
        if ((checkSum % 10) != 0) {
            correct = false;
        };
        if (correct) {
            $('#txtDateOfBirth_Beneficiary').datepicker({ format: 'dd M yyyy', autoclose: true }).datepicker("setDate", dateFormat(new Date(fullDate), "dd/mm/yyyy", false));
            var genderCode = idNumber.substring(6, 10);
            var gender = parseInt(genderCode) < 5000 ? "Female" : "Male";
        }
        else {
            if (idNumber != "") {
                alert("Id Number invalid");
                $("#txtIDNumber_Beneficiary").val("")
                $("#txtDateOfBirth_Beneficiary").val("");
            }
        }
        return false;
    }
</script>