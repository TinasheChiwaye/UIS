@{
    ViewBag.Title = "Quote";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model Funeral.Model.Search.MemberSearch

@Styles.Render("~/Content/datatablecss")
<script src="~/Scripts/plugins/dateformat/DateFormat.js"></script>  <!-- https://gist.github.com/eralston/968809 -->
@using (Html.BeginForm())
{
    @Html.Hidden("UpdatePolicyStatus", Url.Action("UpdatePolicyStatus"))
    @Html.Hidden("GetPolicyStatus", Url.Action("GetPolicyStatus"))
    <div class="dataTables_wrapper" id="tblMembersSearch_wrapper">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Members</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-lg-4" id="dvAdministrator">
                            <div class="form-group">
                                <label>Scheme: </label>
                                @Html.DropDownListFor(m => m.CompanyId, new SelectList(ViewBag.Companies, "parlourid", "ApplicationName"),"Select Scheme", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label>Group Name: </label>
                                @Html.DropDownListFor(m => m.BookID, new SelectList(ViewBag.SocietyLists, "SocietyName", "SocietyName"), "Select Group", new { @id = "ddlBookName", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                <label>Search:</label>
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.SarchText, null, new { @class = "form-control", @maxlength = "50", placeholder = "Search" })
                                    <span class="input-group-btn">
                                        <input type="button" id="btnSearch" value="Search" class="btn btn-w-m btn-primary" />
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                   <div class="row">
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label>Status: </label>
                                @Html.DropDownListFor(m => m.StatusId, new SelectList(ViewBag.Statuses, "Status", "Status"), "Select Status", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label>Show Entries:</label>
                                @Html.DropDownListFor(m => m.PageSize, new SelectList(ViewBag.EntriesCount, "Value", "Key"), new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-9">
                            @*<asp:Label ID="lblRecords" runat="server" Text=""></asp:Label>*@
                        </div>
                    </div>
                    @*<input type="submit" id="btnGetAll" value="GetAll" class="btn btn-w-m btn-primary" formaction="Members/GetAllData" formmethod="post" />*@
                    <div class="row">
                        <div class="col-lg-12 ">
                            <div class="table-responsive">
                                @Html.EditorFor(model => model.PageNum, new { htmlAttributes = new { @class = "hidden", id = "PageNum1" } })
                                @Html.EditorFor(model => model.PageSize, new { htmlAttributes = new { @class = "hidden", id = "PageSize1" } })
                                <table id="memberDataTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                    <thead>
                                        <tr>                                            
                                            <th>Scheme</th>
                                            <th>Group Name </th>
                                            <th>ID Number</th>
                                            <th>Policy Number</th>                                              
                                            <th>Full Name</th>                                            
                                            <th>Inception Date</th>
                                            <th>Policy Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    if (ViewBag.AdministratorOrSuperUser == true)
    {
        <div class="modal fade" id="PolicyUpdateStatus" role="dialog" tabindex="-1" area-hidden="true" style="margin-top: 0px; overflow: auto; height: 400px;">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <span data-dismiss="modal" class="closePopUp">x</span>
                        <h4 id="PopForPolicyStatus" class="modal-title">Policy Status</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Status</label>
                                    @Html.DropDownList("StatusList", new SelectList(ViewBag.StatusList, "Text", "Value"), new { @class = "form-control", @id = "ddlPolicyStatus", @name = "ddlPolicyStatus" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Reason</label>
                                    <textarea maxlength="25" id="txtReason" name="reason" class="form-control"></textarea>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <div class="btn-group">
                                        <button id="BtnUpdatePolicyPopup" class="btn btn-sm btn-primary pull-right m-t-n-xs">Update</button>
                                    </div>
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-primary pull-right m-t-n-xs" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }


        <script type="text/javascript">
        var pkMemberId = null;
        function UpdateStatus(data1) {
            var drpValue = data1.PolicyStatus;
            pkMemberId = data1.pkiMemberID
            jQuery('select#ddlPolicyStatus option').each(function () {
                if (jQuery(this).text() == drpValue) {
                    jQuery(this).prop('selected', 'selected');
                    return;
                }
            });
            var options = {
                'backdrop': false,
                'show': true
            }
            jQuery("#PolicyUpdateStatus").modal(options);

            //jQuery("#ddlPolicyStatus option[value='drpValue']").attr("selected", "selected");
        }
        $("#BtnUpdatePolicyPopup").click(function () {
            var UpdatePolicyStatusURL = jQuery("#UpdatePolicyStatus").val();
            var data = jQuery("#ddlPolicyStatus :selected").text();
            var id = pkMemberId;
            jQuery.ajax({
                url: UpdatePolicyStatusURL,
                data: { policyStatus: data, memberId: id },
                type: "post",
                cache: false,
                success: function (result) {

                }
            })
        });
        
        //$.noConflict();
        jQuery(document).ready(function ($) {
            var hasRight = '@ViewBag.HasAccess';            
            if (hasRight == 'false') {
                var url = '@Url.Action("Error403", "Error", new { })';
                window.location.href = url;
            }
            else {
                $('#myModal').on('shown.bs.modal', function () {
                    $('#myInput').trigger('focus')
                })
                var jsdata = @Html.Raw(Json.Encode(Model));
                var statusId =@Html.Raw(Json.Encode(Model.StatusId));
                var companyId = @Html.Raw(Json.Encode(@Model.CompanyId));
                var sortOrder = @Html.Raw(Json.Encode(@Model.SortOrder));
                var sortBy =@Html.Raw(Json.Encode(@Model.SortBy));
                var totalRecord =@Html.Raw(Json.Encode(@Model.TotalRecord));
                var pageNum =@Html.Raw(Json.Encode(@Model.PageNum));
                var pageSize =@Html.Raw(Json.Encode(@Model.PageSize));
                var searchText =@Html.Raw(Json.Encode(@Model.SarchText));
                var bookId =@Html.Raw(Json.Encode(@Model.BookID));


                var model1 = {
                    StatusId: statusId,
                    CompanyId: companyId,
                    SortOrder: sortOrder,
                    SortBy: sortBy,
                    TotalRecord: totalRecord,
                    PageNum: pageNum,
                    PageSize: pageSize,
                    BookID: bookId,
                    SarchText: searchText

                };
                var datatable = $('#memberDataTable')
                    .on('page.dt', function () {
                        var table = $('#memberDataTable').DataTable();
                        var page = table.page.info();
                        model1.PageNum = page.page + 1;
                    })
                    .dataTable({
                        'bProcessing': true,
                        'bServerSide': true,
                        "bLengthChange": false,
                        'bFilter': false,
                        'scrollX': false,
                        "ordering": true,
                        "bSortable": false,
                        'ajax': {
                            "url": '@Url.Action("SearchData", "Members", null, Request.Url.Scheme)',
                            "type": "POST",
                            "contentType": "application/json",
                            "data": function (d) {
                                d['order'].forEach(function (item, index) {
                                    if (model1.SortBy != d['columns'][item.column]['data']) {
                                        model1.PageNum = 1;
                                        model1.SortOrder = "asc";
                                    }
                                    if (model1.SortBy == d['columns'][item.column]['data'] && model1.SortOrder != d['order'][index]['dir']) {
                                        model1.PageNum = 1;
                                        model1.SortOrder = d['order'][index]['dir'];
                                    }
                                    model1.SortBy = d['columns'][item.column]['data'];
                                    model1.SortOrder = d['order'][index]['dir'];
                                });
                                return JSON.stringify(model1);
                            },
                            "dataSrc": function (json) {

                                json.recordsTotal = json.TotalCount;
                                json.recordsFiltered = json.TotalCount;
                                json.data = json.Result;
                                var return_data = json;
                                return return_data.data;
                            }
                        },
                        "columns": [
                            //{ "data": "pkiMemberID", "name": "MemberId", "autoWidth": true, "visible": false },
                            { "data": "ApplicationName", "name": "Scheme", "autoWidth": true },
                            { "data": "MemberSociety", "name": "Book Name", "autoWidth": true },
                            { "data": "IDNumber", "name": "ID Number", "autoWidth": true },
                            { "data": "MemeberNumber", "name": "Policy No", "autoWidth": true },
                            { "data": "FullNames", "title": "Full Name", "name": "Member", "autoWidth": true },
                            //{ "data": "EasyPayNo", "name": "EasyPayNo", "autoWidth": true },
                            //{ "data": "Cellphone", "name": "Cellphone", "autoWidth": true },
                            {
                                "data": "InceptionDate", "name": "InceptionDate", "autoWidth": true,
                                "render": function (data) {
                                    var date = new Date(parseInt(data.replace('/Date(', '')));
                                    return dateFormat(date, dateFormat.masks.isoDate, true);
                                }
                            },
                            {
                                "data": "PolicyStatus", "name": "Policy Status", "autoWidth": true,
                                "render": function (data, type, full, meta) {
                                    jQuery('.btn[href^=#]').click(function () {
                                        var href = jQuery(this).attr('href');
                                        jQuery(href).modal('toggle');
                                    })
                                    var data1 = JSON.stringify(full);
                                    data1 = data1.replace(/"/g, "\'")
                                    if ('@ViewBag.AdministratorOrSuperUser' == "True")
                                        return '<a onclick = "UpdateStatus(' + data1 + ')">' + data + '</a>';
                                    else
                                        return data;

                                }
                            },
                            {
                                "render": function (data, type, full, meta) {
                                    var hasEditRights = '@ViewBag.HasEditRight' == "True" ? true : false;
                                    var hasDeleteRights = '@ViewBag.HasDeleteRight' == "True" ? true : false;
                                    //hasDeleteRights = 'True';

                                    if (hasEditRights || hasDeleteRights) {

                                        var dom = "<div class='row'>";

                                        if (hasEditRights) {
                                            var editMemberUrl = '<div class="col-sm-4 text-center"><a href="@Url.Action("ManageMembers", "Members", null, Request.Url.Scheme)?pkiMemberID=' + full.pkiMemberID + '"><i class="fa fa-edit"></i></a></div>';
                                            dom = dom + editMemberUrl;
                                        }

                                        if (hasDeleteRights) {
                                            var deleteMemberUrl = '<div class="col-sm-4 text-center"> <a href="@Url.Action("Delete", "Members", null, Request.Url.Scheme)?pkiMemberID=' + full.pkiMemberID + '" onclick="function(){model1.PageNum = 1;return confirm(\'Are you sure you want to delete?\')}"; ><i class="fa fa-trash-o"></i></a></div>';
                                            dom = dom + deleteMemberUrl;
                                        }

                                        dom = dom + "</div>";
                                        return dom;
                                    }
                                    else {
                                        //tableConfigs.table.DataTable().columns([8]).visible(false);
                                        table.DataTable().columns([7]).visible(false)
                                        return "";
                                    }
                                }
                            }
                        ]
                    });

                var hasEditRights = '@(ViewBag.HasEditRight)';
                var hasDeleteRights = '@(ViewBag.HasDeleteRight)';
                hasEditRights = 'True';
                hasDeleteRights = 'True';

                var table = $('#memberDataTable');
                if (hasEditRights == 'True' || hasDeleteRights == 'True') {
                    table.DataTable().columns([7]).visible(true)
                }
                else {
                    table.DataTable().columns([7]).visible(false)
                }

                $('#PageSize').change(function () {
                    InitModel();
                    $('#memberDataTable').DataTable().page.len(model1.PageSize).draw();
                });

                $("#btnSearch").click(function () {
                    InitModel();
                    datatable.fnDraw();
                });
                $("#StatusId").change(function () {
                    InitModel();
                    datatable.fnDraw();
                });
                $("#ddlBookName").change(function () {
                    InitModel();
                    datatable.fnDraw();
                });
                $(document).keypress(function (event) {
                    var keyCode = event.keyCode || event.which;
                    if (keyCode == '13') {
                        $('#btnSearch').click();
                        event.preventDefault();
                    }
                });
                function InitModel() {
                    model1.PageNum = 1;
                    model1.CompanyId = $('#CompanyId').val();
                    model1.PageSize = $('#PageSize').val();
                    model1.SarchText = $("#SarchText").val();
                    model1.StatusId = ($('#StatusId').val() == '' ? '0' : $('#StatusId').val());
                    model1.BookID = $('#ddlBookName').val();
                    $("#PageNum1").val(model1.PageNum);
                }
                $('#CompanyId').change(function () {
                    //debugger;
                    jQuery.ajax({
                        url: '@Url.Action("ChangeParlour", "Parlour", null, Request.Url.Scheme)',
                        data: { parlourId: $('#CompanyId').val() },
                        type: "post",
                        cache: false,
                        success: function (result) { }
                    });
                    BindGroupDropdown($('#CompanyId').val());
                });
            }
        });
        function BindGroupDropdown(ParlourId) {
            var ddlCustomers = jQuery("#ddlBookName");
            ddlCustomers.empty().append('<option selected="selected" value="">Select Group.....</option>');
            jQuery.ajax({
                url: '@Url.Action("BindGroupByCompanyId", "Members")',
                data: { CompanyId: ParlourId },
                type: "post",
                success: function (response) {
                    ddlCustomers.empty().append('<option selected="selected" value="0">Please select</option>');
                    jQuery.each(response, function () {
                        ddlCustomers.append(jQuery("<option></option>").val(this['Text']).html(this['Text']));
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
        </script>
    @*</form>*@
}
<style>

    #memberPolicyDataTable table.dataTable thead .sorting {
        background-image: none !important;
    }

        #memberPolicyDataTable table.dataTable thead .sorting:after {
            content: none !important;
            float: right;
            font-family: fontawesome;
            color: rgba(50, 50, 50, 0.5);
        }
</style>