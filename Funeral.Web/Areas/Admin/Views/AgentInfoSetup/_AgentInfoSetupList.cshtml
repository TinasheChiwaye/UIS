@model Funeral.Model.Search.AgentSearch

@Styles.Render("~/Content/datatablecss")

@using (Html.BeginForm())
{
    <div class="dataTables_wrapper" id="tblAgentInfoSetupSearch_wrapper">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Agent List</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-lg-1" id="dvAdministrator">
                            <div class="form-group">
                                <label>Show entries</label>
                                @Html.DropDownListFor(m => m.PageSize, new SelectList(ViewBag.EntriesCount, "Value", "Key"), new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-sm-5 col-sm-offset-6">
                            <div class="form-group">
                                <label>Search Agent:</label>
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.SarchText, null, new { @class = "form-control", @maxlength = "50", placeholder = "Search by keyword" })
                                    <span class="input-group-btn">
                                        <input type="button" id="btnSearch" value="Search" class="btn btn-w-m btn-primary" />
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-9">
                            <asp:Label ID="lblRecords" runat="server" Text=""></asp:Label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12 ">
                            <div class="table-responsive">
                                @Html.EditorFor(model => model.PageNum, new { htmlAttributes = new { @class = "hidden", id = "PageNum1" } })
                                @Html.EditorFor(model => model.PageSize, new { htmlAttributes = new { @class = "hidden", id = "PageSize1" } })
                                @Html.Hidden("ItemId")
                                <table id="agentInfoSetupDataTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th>Id</th>
                                            <th>SurName</th>
                                            <th>FullName</th>
                                            <th>Percentage</th>
                                            <th>ContactNumber</th>
                                            <th>Address</th>
                                            <th>EMail</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        //$.noConflict();
        //jQuery(function ($) {
            $(document).ready(function () {
                ConfigureDatatable();
                InitDataTable();

                eventConfigs.pageChange.eventName = 'btnPageChanged';
                eventConfigs.pageChange.domElement = jQuery('#PageSize')[0];
                eventConfigs.searchClick.eventName = 'btnSearchClicked';
                eventConfigs.searchClick.domElement = jQuery('#btnSearch')[0];

                $('#PageSize').change(function () {
                    InitModel();
                    tableConfigs.table.DataTable().page.len(model1.PageSize).draw();
                    eventConfigs.pageChange.dispatchEvent();
                });

                $("#btnSearch").click(function () {
                    InitModel();
                    tableConfigs.table.fnDraw();
                    eventConfigs.searchClick.dispatchEvent();
                });

            });
        //})

         function ConfigureDatatable(){

            var sortOrder = @Html.Raw(Json.Encode(@Model.SortOrder));
            var sortBy =@Html.Raw(Json.Encode(@Model.SortBy));
            var totalRecord =@Html.Raw(Json.Encode(@Model.TotalRecord));
            var pageNum =@Html.Raw(Json.Encode(@Model.PageNum));
            var pageSize =@Html.Raw(Json.Encode(@Model.PageSize));
            var searchText =@Html.Raw(Json.Encode(@Model.SarchText));

            DOMIDs.Datatable = "agentInfoSetupDataTable";
            tableConfigs.SearchUrls ='@Url.Action("SearchData", "AgentInfoSetup", new { }, Request.Url.Scheme)';
            setsearchmodel('200', sortOrder, sortBy, totalRecord, pageNum, pageSize, searchText);

            columnsArray =
            [
                { "data": "ID", "name": "ID", "autoWidth": true, "visible": false },
                { "data": "Surname", "name": "Surname", "autoWidth": true},
                {
                    "data": "Fullname", "name": "Fullname", "autoWidth": true
                },
                { "data": "percentage", "name": "Percentage", "autoWidth": true },
                { "data": "ContactNumber", "name": "ContactNumber", "autoWidth": true },
                { "data": "Address1", "name": "Address1", "autoWidth": true },
                { "data": "Email", "name": "Email", "autoWidth": true },
                {
                    "render": function (data, type, full, meta)
                    {
                        var hasEditRights = '@ViewBag.HasEditRight' == "True" ? true : false;
                        var hasDeleteRights = '@ViewBag.HasDeleteRight' == "True" ? true : false;

                        if (hasEditRights || hasDeleteRights) {
                            tableConfigs.table.DataTable().columns([7]).visible(true)
                            var dom = "<div class='row'>";

                            if (hasEditRights) {
                                var editMemberUrl = '<div class="col-sm-4 text-center"><a  onclick="EditAgentInfoSetup(' + full.ID + ')"><i class="fa fa-edit"></i></a></div>';
                                dom = dom + editMemberUrl;
                            }

                            if (hasDeleteRights) {
                                var deleteMemberUrl = '<div class="col-sm-4 text-center"> <a    onclick="DeleteAgentInfoSetup(' + full.ID + ')"; ><i class="fa fa-trash-o"></i></a></div>';
                                dom = dom + deleteMemberUrl;
                            }

                            dom = dom + "</div>";
                            return dom;
                        }
                        else {
                            tableConfigs.table.DataTable().columns([7]).visible(false);
                            return "";
                        }

                        //return '<div class="row"><div class="col-sm-4 text-center"><a  onclick="EditAgentInfoSetup(' + full.ID + ')"><i class="fa fa-edit"></i></a></div><div class="col-sm-4 text-center"> <a    onclick="DeleteAgentInfoSetup(' + full.ID + ')"; ><i class="fa fa-trash-o"></i></a></div></div>';
                    }
                }
            ]
        }

        function InitModel() {
            model1.PageNum = 1;
            model1.PageSize = jQuery('#PageSize').val();
            model1.SarchText = jQuery("#SarchText").val();
            jQuery("#PageNum1").val(model1.PageNum);
         }

        function EditAgentInfoSetup(agentInfoSetupId) {

            jQuery("#ItemId").val(agentInfoSetupId);
            var editUrl = '@Url.Action("Edit","AgentInfoSetup",new {agentId= "AgentIdVal" },Request.Url.Scheme)';
            editUrl = editUrl.replace("AgentIdVal", agentInfoSetupId );

            jQuery.ajax({
                url: editUrl,
                type: "Get",
                contentType: "application/html; charset=utf-8",
                dataType: 'html'
            })
            .success(function (result) {
                jQuery("#" + DOMIDs.AddEdit).html(result);
                window.scrollTo(0, 100);
            })
            .error(function (xhr, status) {
                alert(status);
            });
        }

        function DeleteAgentInfoSetup(agentInfoSetupId) {

            var isConfirmed = confirm('Are you sure you want to delete?');

            if (isConfirmed) {

                jQuery("#ItemId").val(agentInfoSetupId);
                var deleteUrl = '@Url.Action("Delete","AgentInfoSetup",new {agentId= "AgentIdVal" },Request.Url.Scheme)';
                deleteUrl = deleteUrl.replace("AgentIdVal", agentInfoSetupId);

                model1.PageNum = 1;

                jQuery.ajax({
                    url: deleteUrl,
                    type: "Get",
                    contentType: "application/html; charset=utf-8",
                    dataType: 'html'
                })
                    .success(function (result) {
                        InitModel();
                        tableConfigs.table.fnDraw();
                    })
                    .error(function (xhr, status) {
                        alert(status);
                    });
            }
        }

    </script>
    @*</form>*@
}