@model Funeral.Model.Search.BaseSearch
@Styles.Render("~/Content/datatablecss")

<script src="~/Scripts/plugins/dateformat/DateFormat.js"></script>  <!-- https://gist.github.com/eralston/968809 -->

@using (Html.BeginForm())
{
	<div class="dataTables_wrapper" id="tblBranchSetupSearch_wrapper">
		<div class="col-lg-12">
			<div class="ibox ">
				<div class="ibox-title">
					<h5>Quotation List</h5>
				</div>
				<div class="ibox-content">
					<div class="row">
						<div class="col-lg-2" id="dvAdministrator">
							<div class="form-group">
								<label>Show</label>
								@Html.DropDownListFor(m => m.PageSize, new SelectList(ViewBag.EntriesCount, "Value", "Key"), new { @class = "form-control" })
							</div>
						</div>
						<div class="col-sm-4 col-sm-offset-6">
							<div class="form-group">
								<label>Search Members:</label>
								<div class="input-group">
									@Html.TextBoxFor(m => m.SarchText, null, new { @class = "form-control", @maxlength = "50", placeholder = "Search by keyword" })
									<span class="input-group-btn">
										<input type="button" id="btnSearch" value="Search" class="btn btn-w-m btn-primary" />
									</span>
								</div>
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-sm-9">
							<asp:Label ID="lblRecords" runat="server" Text=""></asp:Label>
						</div>
					</div>
					<div class="row">
						<div class="col-lg-12 ">
							<div class="table-responsive">
								@Html.EditorFor(model => model.PageNum, new { htmlAttributes = new { @class = "hidden", id = "PageNum1" } })
								@Html.EditorFor(model => model.PageSize, new { htmlAttributes = new { @class = "hidden", id = "PageSize1" } })
								@Html.Hidden("ItemId")
								<table id="quotationDataTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
									<thead>
										<tr>
											<th class="hidden"></th>
											<th>Name</th>
											<th>Cell Number</th>
											<th>QuotationDate</th>
											<th>Town / City</th>
											<th>Quotation Status</th>
											<th>Actions</th>
										</tr>
									</thead>
									<tbody></tbody>
								</table>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script type="text/javascript">

        $(document).ready(function ($) {
            ConfigureDatatable();
            InitDataTable();

            eventConfigs.pageChange.eventName = 'btnPageChanged';
            eventConfigs.pageChange.domElement = jQuery('#PageSize')[0];
            eventConfigs.searchClick.eventName = 'btnSearchClicked';
            eventConfigs.searchClick.domElement = jQuery('#btnSearch')[0];

            $('#PageSize').change(function () {
                InitModel();
                tableConfigs.table.DataTable().page.len(model1.PageSize).draw();
                eventConfigs.pageChange.dispatchEvent();
            });

            $("#btnSearch").click(function () {
                InitModel();
                tableConfigs.table.fnDraw();
                eventConfigs.searchClick.dispatchEvent();
            });
        });

        function ConfigureDatatable(){
            var sortOrder = @Html.Raw(Json.Encode(@Model.SortOrder));
            var sortBy =@Html.Raw(Json.Encode(@Model.SortBy));
            var totalRecord =@Html.Raw(Json.Encode(@Model.TotalRecord));
            var pageNum =@Html.Raw(Json.Encode(@Model.PageNum));
            var pageSize =@Html.Raw(Json.Encode(@Model.PageSize));
            var searchText =@Html.Raw(Json.Encode(@Model.SarchText));

            DOMIDs.Datatable = "quotationDataTable";
            tableConfigs.SearchUrls = '@Url.Action("SearchData", "Quotation", new { }, Request.Url.Scheme)';
            setsearchmodel('200', sortOrder, sortBy, totalRecord, pageNum, pageSize, searchText);

            columnsArray =
            [{ "data": "QuotationID", "name": "QuotationID", "autoWidth": true, "visible": false },
            { "name": "Name", "autoWidth": true,
                "render":function(data, type, full, meta){
                    return full.ContactLastName+" "+ full.ContactFirstName;
                }
            },
            { "data": "CellNumber", "name": "Cell Number", "autoWidth": true },
            {
                "data": "DateOfQuotation", "name": "QuotationDate", "autoWidth": true,
                "render": function (data) {
                    var date = new Date(parseInt(data.replace('/Date(', '')));
                    return dateFormat(date, dateFormat.masks.isoDate, true);
                }
            },
            { "data": "AddressLine3", "name": "Town / City", "autoWidth": true },
            { "data": "QuotationStatus", "name": "Quotation Status", "autoWidth": true ,
            "render":function(data){
                if(data == "Accept"){
                    return "Accept";
                }else if(data == "Reject"){
                    return "Reject";
                }else{
                    return "Pending"
                }
            }
            },
            {
                "render": function (data, type, full, meta) {

                    var hasEditRights = '@ViewBag.HasEditRight' == "True" ? true : false;
                    var hasDeleteRights = '@ViewBag.HasDeleteRight' == "True" ? true : false;

                    if (hasEditRights || hasDeleteRights) {
                        tableConfigs.table.DataTable().columns([6]).visible(true)
                        var dom = "<div class='row'>";

                        if (hasEditRights) {
                            var editMemberUrl = '<div class="col-sm-4 text-center"><a  onclick="EditQuotation(\'' + full.QuotationID + '\')"><i class="fa fa-edit"></i></a></div>';
                            dom = dom + editMemberUrl;
                        }
                        if (hasDeleteRights) {
                            var deleteMemberUrl = '<div class="col-sm-4 text-center"> <a onclick="DeleteQuotation(\'' + full.QuotationID + '\')"; ><i class="fa fa-trash-o"></i></a></div>';
                            dom = dom + deleteMemberUrl;
                        }
                        var printMemberDataUrl = '<div class="col-sm-4 text-center"> <a href=@Url.Action("PrintForm", "Quotation",new { qutId = "QuotationIdVal" }, Request.Url.Scheme)><i class="fa fa-search"></i></a></div>';
                        printMemberDataUrl = printMemberDataUrl.replace("QuotationIdVal", full.QuotationID);
                        dom = dom + printMemberDataUrl;

                        dom = dom + "</div>";
                        return dom;
                    }
                    else {

                        tableConfigs.table.DataTable().columns([6]).visible(false);
                        return "";
                    }
                }
            }];
        }

        function InitModel() {
            model1.PageNum = 1;
            model1.PageSize = jQuery('#PageSize').val();
            model1.SarchText = jQuery("#SarchText").val();
            jQuery("#PageNum1").val(model1.PageNum);
        }

        function EditQuotation(QuotationID) {

            jQuery("#ItemId").val(QuotationID);
            var editUrl = '@Url.Action("Edit", "Quotation", new { QuotationId = "QuotationIdVal" },Request.Url.Scheme)';
            editUrl = editUrl.replace("QuotationIdVal", QuotationID);

            jQuery.ajax({
                url: editUrl,
                type: "Get",
                contentType: "application/html; charset=utf-8",
                dataType: 'html'
            })
            .success(function (result) {
                jQuery("#" + DOMIDs.AddEdit).html(result);
                window.scrollTo(0, 100);
            })
            .error(function (xhr, status) {
                alert(status);
            });
        }

        function DeleteQuotation(QuotationID) {
            var isConfirmed = confirm('Are you sure you want to delete?');
            if (isConfirmed) {
                jQuery("#ItemId").val(QuotationID);
                var deleteUrl = '@Url.Action("Delete", "Quotation", new { QuotationID = "QuotationIdVal" },Request.Url.Scheme)';
                deleteUrl = deleteUrl.replace("QuotationIdVal", QuotationID);

                model1.PageNum = 1;

                jQuery.ajax({
                    url: deleteUrl,
                    type: "Get",
                    contentType: "application/html; charset=utf-8",
                    dataType: 'html'
                })
    .success(function (result) {
        InitModel();
        tableConfigs.table.fnDraw();
    })
    .error(function (xhr, status) {
        alert(status);
    });
            }
        }
	</script>
}
