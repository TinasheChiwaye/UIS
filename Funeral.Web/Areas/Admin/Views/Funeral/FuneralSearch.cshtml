@model Funeral.Model.Search.FuneralSearch
@{
    ViewBag.Title = "FuneralSearch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/datatablecss")

<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/plugins/datapicker/bootstrap-timepicker.min.js"></script>
<script src="~/Scripts/plugins/dateformat/DateFormat.js"></script>
<script src="~/Scripts/plugins/jquery-ui/jquery-ui.min.js"></script>
<link href="~/Content/plugins/datapicker/datepicker3.css" rel="stylesheet" />
<script src="~/Scripts/plugins/datapicker/bootstrap-datepicker.js"></script>



<div class="dataTables_wrapper">
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Funeral Search</h5>
            </div>
            <div class="ibox-content">
                <div class="row" id="Funerallist">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <div class="input-group" style="color:red;">
                                <ul id="validationMessage" hidden></ul>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label>Status:</label>
                                @Html.DropDownListFor(x => x.StatusId, new SelectList("", "Status", "Status"), "Select", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-5" id="dvAdministrator">
                            <div class="form-group">
                                <label>Scheme: </label>
                                @Html.DropDownListFor(m => m.CompanyId, new SelectList("", "parlourid", "ApplicationName"), new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-4" id="dvAdministrator">
                            <div class="form-group">
                                <label>Book: </label>
                                @Html.DropDownListFor(m => m.SocietyID, new SelectList("", "pkiSocietyID", "SocietyName"), "Select Group", new { @id = "ddlClaimSociety", @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label>Date From:</label>
                                @Html.TextBoxFor(x => x.DateFrom, "{0:dd MMM yyyy}", new { @placeholder = "DD MM YYYY", @id = "txtDateFrom", @autocomplete = "off", @class = "form-control DatepickerSelection" })
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label>Date To:</label>
                                @Html.TextBoxFor(x => x.DateTo, "{0:dd MMM yyyy}", new { @placeholder = "DD MM YYYY", @id = "txtDateTo", @autocomplete = "off", @class = "form-control DatepickerSelection" })
                            </div>
                        </div>

                        <div class="col-sm-2">
                            <label>Show Entries:</label>
                            @Html.DropDownListFor(m => m.PageSize, new SelectList( "Value", "Key"), new { @class = "form-control" })
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label>Search: </label>
                                <div class="input-group">
                                    @Html.TextBoxFor(x => x.SarchText, new { @placeholder = "Search", @class = "form-control" })
                                    <span class="input-group-btn">
                                        <input type="button" id="btnSearch" value="Search" class="btn btn-w-m btn-primary" />
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" id="ClaimDetail">
                <div class="col-lg-12">
                    <div class="table-responsive">
                        @Html.EditorFor(model => model.PageNum, new { htmlAttributes = new { @class = "hidden", id = "PageNum1" } })
                        @Html.EditorFor(model => model.PageSize, new { htmlAttributes = new { @class = "hidden", id = "PageSize1" } })
                        <table id="funeralDataTable" class="table table-responsive table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>ID Number</th>
                                    <th>Member No.</th>
                                    <th>Full Name</th>
                                    @*
                                    <th>Claim Notes</th>*@
                                    @*
                                    <th>Cause of Death</th>*@
                                    @*
                                    <th>Contact No</th>*@
                                    <th>Last Modified</th>
                                    <th>Created Date</th>
                                    <th>Assigned To</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*<div id="LoadPartialView_ManageClaims"></div>*@

<script>
    jQuery(document).ready(function () {
        jQuery(".DatepickerSelection").datepicker({
            format: 'dd M yyyy',
            setDate: new Date(),
            autoclose: true,
            onSelect: function (dateText) { $(this).change(); }
        }).on("change", function () { });

        var hasRight = '@ViewBag.HasAccess';
        if (hasRight == 'false') {
            var url = '@Url.Action("Error403", "Error", new { })';
            window.location.href = url;
        }
        else {
                        $('#myModal').on('shown.bs.modal', function () {
                $('#myInput').trigger('focus')
            })
            @*var jsdata = @Html.Raw(Json.Encode(Model));
            var statusId =@Html.Raw(Json.Encode(Model.StatusId));
            var companyId = @Html.Raw(Json.Encode(@Model.CompanyId));
            var dateFrom = @Html.Raw(Json.Encode(@Model.DateFrom));
            var dateTo = @Html.Raw(Json.Encode(@Model.DateTo));
            var sortOrder = @Html.Raw(Json.Encode(@Model.SortOrder));
            var sortBy =@Html.Raw(Json.Encode(@Model.SortBy));
            var totalRecord =@Html.Raw(Json.Encode(@Model.TotalRecord));
            var pageNum =@Html.Raw(Json.Encode(@Model.PageNum));
            var pageSize =@Html.Raw(Json.Encode(@Model.PageSize));
            var searchText =@Html.Raw(Json.Encode(@Model.SarchText));
            var searchType =@Html.Raw(Json.Encode(@Model.SearchType));
            var societyid =@Html.Raw(Json.Encode(@Model.SocietyID));

            var model1 = {
                StatusId: statusId,
                CompanyId: companyId,
                SortOrder: sortOrder,
                SortBy: sortBy,
                TotalRecord: totalRecord,
                PageNum: pageNum,
                PageSize: pageSize,
                SarchText: searchText,
                SearchType: searchType,
                SocietyID: societyid
            };*@

                        var datatable = $('#funeralDataTable')
                .on('page.dt', function () {
                    var table = $('#funeralDataTable').DataTable();
                    var page = table.page.info();
                    model1.PageNum = page.page + 1;
                })
                .dataTable
                ({
                    'bProcessing': true,
                    'bServerSide': true,
                    "bVisible": true,
                    "bLengthChange": false,
                    'bFilter': false,
                    'scrollX': false,
                    "ordering": false,
                    "bSortable": false,
                    'ajax': {
                        "url": '@Url.Action("SearchData", "Claims", null, Request.Url.Scheme)',
                        "type": "POST",
                        "contentType": "application/json",
                        "data":
                            function (d) {
                                d['order'].forEach(function (item, index) {
                                    if (model1.SortBy != d['columns'][item.column]['data']) {
                                        model1.PageNum = 1;
                                        model1.SortOrder = "asc";
                                    }
                                    if (model1.SortBy == d['columns'][item.column]['data'] && model1.SortOrder != d['order'][index]['dir']) {
                                        model1.PageNum = 1;
                                        model1.SortOrder = d['order'][index]['dir'];
                                    }
                                    model1.SortBy = d['columns'][item.column]['data'];
                                    model1.SortOrder = d['order'][index]['dir'];
                                });
                                return JSON.stringify(model1);
                            },
                        "dataSrc": function (json) {
                            json.recordsTotal = json.TotalCount;
                            json.recordsFiltered = json.TotalCount;
                            json.data = json.Result;
                            var return_data = json;
                            return return_data.data;
                        }
                    },
                    "columns": [
                        { "data": "ClaimantIDNumber", "name": "ClaimantIDNumber" },
                        { "data": "MemberNumber", "name": "MemberNumber" },
                        {
                             "render": function (data, type, full, meta) {
                                 return full.ClaimantFullname + " " + full.ClaimantSurname;
                            }
                        },
                        //{ "data": "ClaimNotes", "name": "ClaimNotes" },
                        //{ "data": "CourseOfDearth", "name": "CourseOfDearth" },
                        //{ "data": "ClaimantContactNumber", "name": "ClaimantContactNumber" },
                        {
                            "data": "LastModified", "name": "Last Modified", "autoWidth": true,
                            "render": function (data) {

                                var date = new Date(parseInt(data.replace('/Date(', '')));
                                if (date.getFullYear() > 1900) {
                                    return dateFormat(date, dateFormat.masks.PerfectDate, true);
                                }
                                return null;
                            }
                        },
                         {
                            "data": "CreatedDate", "name": "Created Date", "autoWidth": true,
                            "render": function (data) {

                                var date = new Date(parseInt(data.replace('/Date(', '')));
                                if (date.getFullYear() > 1900) {
                                    return dateFormat(date, dateFormat.masks.PerfectDate, true);
                                }
                                return null;
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                var dom = "<div class='row'>";
                                var SendMailClaimUrl = '<div class="col-sm-12"><a accessKey="' + full.parlourid + '"  placeholder="Click to Change Assigned User" onclick="OpenClaimAssignedToPopUp(' + full.pkiClaimID + ',this)">' + full.AssignedToName + '</a></div>';
                                dom = dom + SendMailClaimUrl;
                                dom = dom + "</div>";
                                return dom;
                            }
                        },

                        {
                            "render": function (data, type, full, meta) {
                                var dom = "<div class='row'>";
                                var SendMailClaimUrl = '<div class="col-sm-12"><a accessKey="' + full.parlourid + '" onclick="OpenClaimStatusPopUp(' + full.pkiClaimID + ',this)">' + full.Status + '</a></div>';
                                dom = dom + SendMailClaimUrl;
                                dom = dom + "</div>";
                                return dom;
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                var hasEditRights = true;
                                var hasDeleteRights = true;
                                if (hasEditRights || hasDeleteRights) {
                                    var dom = "<div class='row'>";
                                    if (hasEditRights) {
                                        var editClaimUrl = '<div class="col-sm-3"><a href="@Url.Action("ClaimAddEdit", "Claims", null, Request.Url.Scheme)?pkiClaimID=' + full.pkiClaimID + '&parlourId='+full.parlourid+'"><i class="fa fa-edit"></i></a></div>';
                                        dom = dom + editClaimUrl;
                                    }

                                    @*if (hasDeleteRights) {
                                        var deleteClaimUrl = '<div class="col-sm-3"> <a href="@Url.Action("Delete", "Claims", null, Request.Url.Scheme)?pkiClaimID=' + full.pkiClaimID + '" onclick="function(){model1.PageNum = 1;return confirm(\'Are you sure you want to delete?\')}"; ><i class="fa fa-trash-o"></i></a></div>';
                                        dom = dom + deleteClaimUrl;
                                    }*@
                                    //var SendMailClaimUrl = '<div class="col-sm-3"><a data-toggle="modal" data-target="#dvSendEmail"  onclick="OpenEmailPopup(' + full.pkiClaimID + ','+full.fkiMemberID+')"><i class="fa fa-envelope"></i></a></div>';
                                    //dom = dom + SendMailClaimUrl;

                                    var ShowStatusDetails = '<div class="col-sm-3"><a href="@Url.Action("ClaimStatusHistory", "Claims", null, Request.Url.Scheme)?pkiClaimID=' + full.pkiClaimID + '&MemberId='+full.fkiMemberID+'&parlourId='+full.parlourid+'"><i class="fa fa-server"></i></a></div>';
                                    dom = dom + ShowStatusDetails;
                                    dom = dom + "</div>";
                                    return dom;
                                }
                                else {
                                    table.DataTable().columns([7]).visible(false)
                                    return "";
                                }
                            }
                        }
                    ]
                });


            var hasEditRights = '@(ViewBag.HasEditRight)';
            var hasDeleteRights = '@(ViewBag.HasDeleteRight)';
            hasEditRights = 'True';
            hasDeleteRights = 'True';


 </script>






