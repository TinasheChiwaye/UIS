
@{
    ViewBag.Title = "Imported History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model Funeral.Model.Search.MemberSearch
@Styles.Render("~/Content/datatablecss")
<script src="~/Scripts/plugins/dateformat/DateFormat.js"></script>
@using (Html.BeginForm())
{
    @Html.Hidden("UpdatePolicyStatus", Url.Action("UpdatePolicyStatus"))
    @Html.Hidden("GetPolicyStatus", Url.Action("GetPolicyStatus"))
    <div class="dataTables_wrapper" id="tblMembersSearch_wrapper">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Imported History</h5>
                </div>
                <div class="ibox-content" style="min-height:600px">
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label>Show entries</label>
                                @Html.DropDownListFor(m => m.PageSize, new SelectList(ViewBag.EntriesCount, "Value", "Key"), new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-4" id="dvAdministrator">
                            <div class="form-group">
                                <label>Scheme </label>
                                @Html.DropDownListFor(m => m.CompanyId, new SelectList(ViewBag.Companies, "parlourid", "ApplicationName"), new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                <label>Search History:</label>
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.SarchText, null, new { @class = "form-control", @maxlength = "50", placeholder = "Search by keyword" })
                                    <span class="input-group-btn">
                                        <input type="button" id="btnSearch" value="Search" class="btn btn-w-m btn-primary" />
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="table-responsive">
                                @Html.EditorFor(model => model.PageNum, new { htmlAttributes = new { @class = "hidden", id = "PageNum1" } })
                                @Html.EditorFor(model => model.PageSize, new { htmlAttributes = new { @class = "hidden", id = "PageSize1" } })
                                <table id="tblImportedHistory" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th>File Name</th>
                                            <th>Imported By</th>
                                            <th>Imported Date</th>
                                            <th>Mapped Column</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <script type="text/javascript">
        $.noConflict();
        jQuery(document).ready(function ($) {
            var hasRight = '@ViewBag.HasAccess';
            if (hasRight == 'false') {
                var url = '@Url.Action("Error403", "Error", new { })';
                window.location.href = url;
            }
            else {
            $('#myModal').on('shown.bs.modal', function () {
                $('#myInput').trigger('focus')
            })
            var jsdata = @Html.Raw(Json.Encode(Model));
            var companyId = @Html.Raw(Json.Encode(@Model.CompanyId));
            var sortOrder = @Html.Raw(Json.Encode(@Model.SortOrder));
            var sortBy =@Html.Raw(Json.Encode(@Model.SortBy));
            var totalRecord =@Html.Raw(Json.Encode(@Model.TotalRecord));
            var pageNum =@Html.Raw(Json.Encode(@Model.PageNum));
            var pageSize =@Html.Raw(Json.Encode(@Model.PageSize));
            var searchText =@Html.Raw(Json.Encode(@Model.SarchText));

            var model1 = {
                CompanyId: companyId,
                SortOrder: sortOrder,
                SortBy: sortBy,
                TotalRecord: totalRecord,
                PageNum: pageNum,
                PageSize: pageSize,
                SarchText: searchText
            };
            var datatable = $('#tblImportedHistory')
                .on('page.dt', function () {
                    var table = $('#tblImportedHistory').DataTable();
                    var page = table.page.info();
                    model1.PageNum = page.page + 1;
                })
                .dataTable({
                    'bProcessing': true,
                    'bServerSide': true,
                    "bLengthChange": false,
                    'bFilter': false,
                    'scrollX': false,
                    "ordering": false,
                    "bSortable": false,
                    'ajax': {
                        "url": '@Url.Action("SearchData", "ImportData", null, Request.Url.Scheme)',
                        "type": "POST",
                        "contentType": "application/json",
                        "data": function (d) {
                            d['order'].forEach(function (item, index) {
                                if (model1.SortBy != d['columns'][item.column]['data']) {
                                    model1.PageNum = 1;
                                    model1.SortOrder = "asc";
                                }
                                if (model1.SortBy == d['columns'][item.column]['data'] && model1.SortOrder != d['order'][index]['dir']) {
                                    model1.PageNum = 1;
                                    model1.SortOrder = d['order'][index]['dir'];
                                }
                                model1.SortBy = d['columns'][item.column]['data'];
                                model1.SortOrder = d['order'][index]['dir'];
                            });
                            return JSON.stringify(model1);
                        },
                        "dataSrc": function (json) {

                            json.recordsTotal = json.TotalCount;
                            json.recordsFiltered = json.TotalCount;
                            json.data = json.Result;
                            var return_data = json;
                            return return_data.data;
                        }
                    },
                    "columns": [
                        { "data": "ImportedFilename", "name": "File name", "autoWidth": true },
                        {"data": "ImportedBy", "name": "Imported By", "autoWidth": true},
                        {
                            "data": "ImportedDate", "name": "Imported Date", "autoWidth": true,
                            "render": function (data) {
                                var date = new Date(parseInt(data.replace('/Date(', '')));
                                return dateFormat(date, dateFormat.masks.isoDate, true);
                            }
                        },
                         {
                            "render": function (data, type, full, meta) {
                                var dom = "<div class='row'>";
                                var editMemberUrl = '<div class="col-sm-4 text-center"><a placeholder="Show Mapped Column" onclick="ShowMappedColumnList(\''+full.NewImportedId + '\')"><i class="fa fa-server"></i> Mapped Column</a></div>';
                                dom = dom + editMemberUrl;
                                dom = dom + "</div>";
                                return dom;
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {

                                    var RedirectUrl = '@Url.Content("~/Admin/ImportExcel.aspx?ImportedId=GetImportedId")'.replace("GetImportedId", full.ImportedId);
                                    var dom = "<div class='row'>";
                                    var SaveImportData = '<div class="col-sm-4 text-center"><a placeholder="Save and Confirm Data" href="' + RedirectUrl + '"><i class="fa fa-server"></i> Show Data</a></div>';
                                    dom = dom + SaveImportData;
                                    dom = dom + "</div>";
                                    return dom;

                            }
                        }
                    ]
                });


                var table = $('#tblImportedHistory');
                table.DataTable().columns([4]).visible(true);
            $('#PageSize').change(function () {
                InitModel();
                $('#tblImportedHistory').DataTable().page.len(model1.PageSize).draw();
            });

            $("#btnSearch").click(function () {
                InitModel();
                datatable.fnDraw();
            });
            function InitModel() {
                model1.PageNum = 1;
                model1.CompanyId = $('#CompanyId').val();
                model1.PageSize = $('#PageSize').val();
                model1.SarchText = $("#SarchText").val();
                $("#PageNum1").val(model1.PageNum);
                }
                $('#CompanyId').change(function () {
                    jQuery.ajax({
                        url: '@Url.Action("ChangeParlour", "Parlour", null, Request.Url.Scheme)',
                        data: { parlourId: $('#CompanyId').val() },
                        type: "post",
                        cache: false,
                        success: function (result) {

                        }
                    })
                });
            }

        });
        function ShowMappedColumnList(data) {
            var GenerateSendMailURL = "@Url.Action("MappingColumnList","ImportData",new {ImportedId="GetImportedId"})".replace("GetImportedId", data);
            jQuery.ajax({
                url: GenerateSendMailURL,
                type: 'GET',
                cache: false,
            }).done(function (result) {
                jQuery('#LoadPartialView_ManageClaims').empty().html(result);
                jQuery("#dvMappedColumnListPopUp").modal("show");
                jQuery('.modal-backdrop').removeClass("modal-backdrop");
            });
        }
    </script>
}


