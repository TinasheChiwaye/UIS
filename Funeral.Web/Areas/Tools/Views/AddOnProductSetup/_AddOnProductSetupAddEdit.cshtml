@model Funeral.Model.AddonProductsModal

@Scripts.Render("~/bundles/jqueryval")

@using (Html.BeginForm("Save", "AddOnProductSetup", FormMethod.Post, new { id = "addOnProductSetupAddEditform" }))
{
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Supplementary benefits Setup</h5>
            </div>
            <div class="ibox-content">
                @Html.HiddenFor(m => m.pkiProductID)
                @Html.HiddenFor(m => m.parlourid)
                <div class="form-group row">
                    <div class="messagealert" id="alert_container"></div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Product Name", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.ProductName, null, new { @class = "form-control", @maxlength = "25", placeholder = "Product Name" })
                            @Html.ValidationMessageFor(m => m.ProductName, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Description", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.ProductDesc, null, new { @class = "form-control", @maxlength = "50", placeholder = "Product Description" })
                            @Html.ValidationMessageFor(m => m.ProductDesc, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Premium", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.ProductCost, null, new { @class = "form-control", @maxlength = "25", placeholder = "Premium" })
                            @Html.ValidationMessageFor(m => m.ProductCost, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Underwriter Premium", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.UnderwriterPremium, null, new { @class = "form-control", @maxlength = "25", placeholder = "Underwriter Premium" })
                            @Html.ValidationMessageFor(m => m.UnderwriterPremium, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Cover", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.ProductCover, null, new { @class = "form-control", @maxlength = "25", placeholder = "Cover" })
                            @Html.ValidationMessageFor(m => m.ProductCover, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Select Scheme ", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.DropDownListFor(m => m.SchemeID, new SelectList(ViewBag.Companies, "parlourid", "ApplicationName"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.SchemeID, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            <div class="checkbox">
                                <label class="control-label">@Html.CheckBox("IsProductOngoing")Is Product Ongoing</label>
                            </div>
                            <div class="checkbox">
                                <label class="control-label">@Html.CheckBox("IsProductLaybye")Is Product Laybye</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group">
                            <div class="btn-group">
                                <input type="button" id="btnCancel" value="Cancel" class="btn btn-w-m btn-primary" />
                            </div>
                            <div class="btn-group">
                                <input id="btnSubmit" type="submit" value="Save" class="btn btn-w-m btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    if (TempData.Peek("IsAddOnProductSetupSaved") != null && (bool)TempData.Peek("IsAddOnProductSetupSaved") == true)
    {
        <script>
            ShowSaveMessage('#alert_container', 'Add On Product saved successfully!');
        </script>

        TempData.Remove("IsAddOnProductSetupSaved");
    }

    <script type="text/javascript">
        jQuery(document).ready(function () {


            jQuery("#btnCancel").click(function (event) {
                jQuery("#ProductName").val("");
                jQuery("#ProductDesc").val("");
                jQuery("#ProductCost").val("");
                jQuery("#ProductCover").val("");
                jQuery("#UnderwriterPremium").val("");
            })

            var form = jQuery("#addOnProductSetupAddEditform");
            form.validate();
            jQuery("#btnSubmit").click(function (event) {
                if (jQuery(form).valid()) {

                    if (jQuery("#IsProductOngoing").val() == 'true') {
                        jQuery("#IsProductOngoing").val(1);
                    }
                    else {
                        jQuery("#IsProductOngoing").val(0);
                    }
                    if (jQuery("#IsProductLaybye").val() == 'true') {
                        jQuery("#IsProductLaybye").val(1);
                    }
                    else {
                        jQuery("#IsProductLaybye").val(0);
                    }
                    return true;
                }
                else {
                    return false;
                }
            });

            eventConfigs.pageChange.action(RefreshAddEditData);
            eventConfigs.searchClick.action(RefreshAddEditData);
        });

        function RefreshAddEditData(e) {
            LoadAddOnProductSetupAddEdit();
        }
    </script>

}
