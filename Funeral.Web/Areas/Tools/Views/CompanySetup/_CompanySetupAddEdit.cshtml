@model Funeral.Model.ApplicationSettingsModel

@Scripts.Render("~/bundles/jqueryval")
@{
    Layout = null;
}
<style>
    .ui-widget-header {
        background: #cedc98;
        border: 1px solid #DDDDDD;
        color: #333333;
        font-weight: bold;
    }

    .progress-label {
        position: absolute;
        left: 50%;
        top: 13px;
        font-weight: bold;
        text-shadow: 1px 1px 0 #fff;
    }

    .red {
        color: red;
    }
</style>



@using (Html.BeginForm("Save", "CompanySetup", FormMethod.Post, new { id = "companySetupAdddEditform" }))
{
    @Html.HiddenFor(m => m.pkiApplicationID)
    @Html.HiddenFor(m => m.parlourid)

    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Company Setup</h5>
            </div>
            <div class="ibox-content">
                <div class="form-group row">
                    <div class="messagealert" id="alert_container"></div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Company Name", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.ApplicationName, null, new { @class = "form-control", @maxlength = "150", placeholder = "Company Name" })
                            @Html.ValidationMessageFor(m => m.ApplicationName, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Registration Number", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.RegistrationNumber, null, new { @class = "form-control", @maxlength = "25", placeholder = "Registration Number" })
                        </div>
                        <div class="form-group">
                            @Html.Label("FSB Number", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.FSBNumber, null, new { @class = "form-control", @maxlength = "50", placeholder = "FSB Number" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Company Slogan", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.ManageSlogan, null, new { @class = "form-control", @maxlength = "255", placeholder = "Company Slogan" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Company Rules", new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.ApplicationRules, 4, 100, new { @class = "form-control", placeholder = "Company Slogan" })
                        </div>

                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Email Address", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.ManageEmail, null, new { @class = "form-control", @maxlength = "155", placeholder = "Email Address" })
                            @Html.ValidationMessageFor(m => m.ManageEmail, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Telephone Number", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.ManageTelNumber, null, new { @class = "form-control", @maxlength = "25", placeholder = "Telephone Number" })
                            @Html.ValidationMessageFor(m => m.ManageTelNumber, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Cellphone Number", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.ManageCellNumber, null, new { @class = "form-control", @maxlength = "25", placeholder = "Cellphone Number" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Fax Number", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.ManageFaxNumber, null, new { @class = "form-control", @maxlength = "25", placeholder = "Fax Number" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="row form-group" id="FileBrowse">
                            <div class="col-sm-8">
                                <input type="file" id="Files" />
                            </div>
                            <div class="col-sm-4">
                                <input type="button" id="UploadBtn" class="btn btn-danger" value="Upload" />
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-12">
                                <div class="col-sm-4">
                                    <div id="progressbar-5">
                                        <div class="progress-label">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-12">
                                <table class="table" id="ListofFiles">
                                    <tr>
                                        <th>
                                            Files
                                        </th>
                                        <th>
                                            Action
                                        </th>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <img id="applicationlogopath" height="164" width="375" src="" alt="Image" />
                        @Html.HiddenFor(m => m.ApplicationLogo, new { id = "ApplicationLogo" });
                        @Html.HiddenFor(m => m.ApplicationLogoPath, new { id = "ApplicationLogoPath" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Terms And Conditions</h5>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Terms And Condition", new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.TermAndConditions.TermsAndCondition, 4, 100, new { @class = "form-control", placeholder = "Terms And Condition" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Allow Auto Generate Policy Number", new { @class = "control-label" })
                            @Html.CheckBoxFor(m => m.IsAutoGeneratedPolicyNo, new { @checked = "checked" })
                        </div>
                        <div class="form-group">
                            @Html.Label("VAT Number", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.VatNo, null, new { @class = "form-control", @maxlength = "25", placeholder = "VAT Number" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Terms And Condition For Funeral", new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.TermAndConditions.TermsAndConditionFuneral, 4, 100, new { @class = "form-control", placeholder = "Terms And Condition" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Terms And Condition For TombStones", new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.TermAndConditions.TermsAndConditionTombstone, 4, 100, new { @class = "form-control", placeholder = "Terms And Condition For TombStones" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Policy Declaration", new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.TermAndConditions.Declaration, 4, 100, new { @class = "form-control", placeholder = "Policy Declaration" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Fax Number", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.ManageFaxNumber, null, new { @class = "form-control", @maxlength = "25", placeholder = "Fax Number" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Owner Details</h5>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("First Name", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.OwnerFirstName, null, new { @class = "form-control", @maxlength = "50", placeholder = "First Name" })
                            @Html.ValidationMessageFor(m => m.OwnerFirstName, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Last Name", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.OwnerSurname, null, new { @class = "form-control", @maxlength = "50", placeholder = "Last Name" })
                            @Html.ValidationMessageFor(m => m.OwnerSurname, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Telephone Number", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.OwnerTelNumber, null, new { @class = "form-control", @maxlength = "25", placeholder = "Telephone Number" })
                            @Html.ValidationMessageFor(m => m.OwnerTelNumber, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Cellphone Number", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.OwnerCellNumber, null, new { @class = "form-control", @maxlength = "25", placeholder = "Cellphone Number" })
                            @Html.ValidationMessageFor(m => m.OwnerCellNumber, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Email Address", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.OwnerEmail, null, new { @class = "form-control", @maxlength = "100", placeholder = "Email Address" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Address Details</h5>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group row">
                            <div class="col-sm-4">
                                @Html.Label("Line 1", new { @class = "control-label" })
                                <strong><span class="text-danger"><em>*</em></span></strong>
                            </div>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.BusinessAddressLine1, null, new { @class = "form-control", @maxlength = "155", placeholder = "Line 1" })
                                @Html.ValidationMessageFor(m => m.BusinessAddressLine1, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-4">
                                @Html.Label("Line 2", new { @class = "control-label" })
                                <strong><span class="text-danger"><em>*</em></span></strong>
                            </div>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.BusinessAddressLine2, null, new { @class = "form-control", @maxlength = "155", placeholder = "Line 1" })
                                @Html.ValidationMessageFor(m => m.BusinessAddressLine2, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-4">
                                @Html.Label("Line 3", new { @class = "control-label" })
                            </div>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.BusinessAddressLine3, null, new { @class = "form-control", @maxlength = "155", placeholder = "Line 3" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-4">
                                @Html.Label("Line 4", new { @class = "control-label" })
                            </div>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.BusinessAddressLine4, null, new { @class = "form-control", @maxlength = "155", placeholder = "Line 4" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-4">
                                @Html.Label("Postal Code", new { @class = "control-label" })
                                <strong><span class="text-danger"><em>*</em></span></strong>
                            </div>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.BusinessPostalCode, null, new { @class = "form-control", @maxlength = "30", placeholder = "Postal Code" })
                                @Html.ValidationMessageFor(m => m.BusinessPostalCode, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>SMS Sending Settings</h5>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-lg-12">
                        @for (var i = 0; i < Model.SMSSettings.Count; i++)
                        {
                            @Html.CheckBoxFor(m => m.SMSSettings[i].IsSelected)
                            @Html.HiddenFor(m => m.SMSSettings[i].Name)
                            @Html.HiddenFor(m => m.SMSSettings[i].ID)
                            <span>@Model.SMSSettings[i].Name</span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Bank Details</h5>
            </div>
            <div class="ibox-content">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Account Holder", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.BankDetails.AccountHolder, null, new { @class = "form-control", @maxlength = "100", placeholder = "Account Holder" })
                            @Html.ValidationMessageFor(m => m.BankDetails.AccountHolder, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Bank name", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.BankDetails.Bankname, null, new { @class = "form-control", @maxlength = "150", placeholder = "Bank name" })
                            @Html.ValidationMessageFor(m => m.BankDetails.Bankname, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Account Number", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.BankDetails.AccountNumber, null, new { @class = "form-control", @maxlength = "25", placeholder = "Account Number" })
                            @Html.ValidationMessageFor(m => m.BankDetails.AccountNumber, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Account Type", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.BankDetails.Accounttype, null, new { @class = "form-control", @maxlength = "50", placeholder = "Account Type" })
                            @Html.ValidationMessageFor(m => m.BankDetails.Accounttype, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Branch", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.BankDetails.Branch, null, new { @class = "form-control", @maxlength = "150", placeholder = "Branch" })
                            @Html.ValidationMessageFor(m => m.BankDetails.Branch, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Branch Code", new { @class = "control-label" })
                            <strong><span class="text-danger"><em>*</em></span></strong>
                            @Html.TextBoxFor(m => m.BankDetails.Branchcode, null, new { @class = "form-control", @maxlength = "50", placeholder = "Branch Code" })
                            @Html.ValidationMessageFor(m => m.BankDetails.Branchcode, string.Empty, new { @class = "text-danger", style = "font-weight:bold" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="form-group">
            <div class="btn-group">
                <input id="btnCancel" value="Cancel" class="btn btn-w-m btn-primary" />
            </div>
            @if (ViewBag.HasCreateRight)
            {
                <div class="btn-group">
                    <input id="btnSubmit" type="submit" value="Save" class="btn btn-w-m btn-primary" />
                </div>
            }

        </div>
    </div>


    if (TempData.Peek("IsCompanySetupSaved") != null && (bool)TempData.Peek("IsCompanySetupSaved") == true)
    {
        <script>
            ShowSaveMessage('#alert_container', 'Company setup saved successfully!');
        </script>

        TempData.Remove("IsCompanySetupSaved");
    }
}
<script type="text/javascript">
        jQuery(document).ready(function ($) {
            var form = jQuery("#companySetupAdddEditform");
            var validator = form.validate();
            validator.showErrors();

            var logoImage = DisplayImage();

            $("#applicationlogopath").attr('src', logoImage.applicationLogo);
            if (logoImage.applicationLogoPath != '') {
                ShowImageDetails(logoImage.applicationLogoPath);
            }

            $("#btnSubmit").click(function (event) {
                if ($(form).valid()) {
                    var logoData = $("#ApplicationLogo").val();
                    $("#ApplicationLogo").val(logoData.replace("data:image/png;base64,", ''));
                    return true;
                }
                else {
                    return false;
                }
            });

            $("#UploadBtn").click(function () {
                var fileUpload = $("#Files").get(0);
                var files = fileUpload.files;
                var fileData = new FormData();
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }

                $.ajax({
                    url: '@Url.Action("UploadFiles", "CompanySetup", new { },Request.Url.Scheme)',
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: fileData,
                    async: false,
                    success: function (result) {
                        if (result != "") {
                            $('#FileBrowse').find("*").prop("disabled", true);
                            LoadProgressBar(result);
                        }
                    },
                    error: function (err) {
                        alert(err.statusText);
                    }
                });

            });

        });

        @{ var logo = "";var logoPath="";}

        function DisplayImage() {

            var applicationLogoDetails = { applicationLogoPath: '', applicationLogo: '' };

            @if (!string.IsNullOrEmpty(Model.ApplicationLogoPath))
            {
                string base64String = Convert.ToBase64String(Model.ApplicationLogo, 0, Model.ApplicationLogo.Length);
                logo = "data:image/png;base64," + base64String;
                logoPath = Model.ApplicationLogoPath;
            }

            applicationLogoDetails.applicationLogo = '@logo';
            applicationLogoDetails.applicationLogoPath = '@logoPath';

            return applicationLogoDetails;
        }

    function LoadProgressBar(result) {
            $("#applicationlogopath").attr('src', result.ThumbnailData);
            $("#ApplicationLogo").val(result.ThumbnailData);
            $("#ApplicationLogoPath").val(result.FileName);

            var progressbar = $("#progressbar-5");
            var progressLabel = $(".progress-label");
            progressbar.show();

            $("#progressbar-5").progressbar({
                change: function () {
                    progressLabel.text(
                        progressbar.progressbar("value") + "%");
                },
                complete: function () {
                    progressLabel.text("Loading Completed!");
                    progressbar.progressbar("value", 0);
                    progressLabel.text("");
                    progressbar.hide();
                    ShowImageDetails(result.FileName);
                }
            });

            function progress() {
                var val = progressbar.progressbar("value") || 0;
                progressbar.progressbar("value", val + 1);
                if (val < 99) {
                    setTimeout(progress, 25);
                }
            }

            setTimeout(progress, 100);
        }

        function ShowImageDetails(fileName) {

            var markup = "<tr><td>" + fileName + "</td><td><a href='#' onclick='DeleteFile(\"" + fileName + "\")'><span class='glyphicon glyphicon-remove red'></span></a></td></tr>";
            $("#ListofFiles tbody").append(markup);
            $('#Files').val('');
            $('#FileBrowse').find("*").prop("disabled", false);
            $("#FileBrowse :input").attr("disabled", true);

        }

        function DeleteFile(path) {

            $.ajax({
                url: '@Url.Action("DeleteFile", "CompanySetup", new { },Request.Url.Scheme)',
                dataType: "text json",
                type: "POST",
                data: {
                    fileName: path
                },
                success: function (data, textStatus) {
                    $("#applicationlogopath").attr('src', '');
                    $("#FileBrowse :input").attr("disabled", false);
                    $("#ListofFiles tbody").find('tr:last').each(function () {
                        $(this).remove();
                    });
                },
                error: function (error) {
                    alert('failuer');
                }
            });
        }
</script>
